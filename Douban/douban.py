# -*- coding: utf-8 -*-
"""douban.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qg0hwEsZ4IjUxPMAlKT0DwKyUgnjc6Zx

# 提取豆瓣电影Top250
"""

#coding:utf-8  
# 文件导出版本
''''' 
@author: jsjxy 
@origin: https://www.cnblogs.com/xisheng/p/9130156.html
'''  
from urllib import request 
from bs4 import BeautifulSoup  
import re
#from distutils.filelist import findall   

def doubantop(N):
    with open('./douban-top-%s.txt'%str(N),'w') as f:
        f.write("豆瓣电影TOP"+str(N)+'\n') 
        f.write('%-13s%-5s%-15s%-40s\n'%('影片名','评分','评价人数','链接'))
        for n in range(N//25):
            url = 'https://movie.douban.com/top250?start='+str(25*n)+'&filter='  
            page = request.urlopen(url)   
            contents = page.read()   
         #print(contents)  
            soup = BeautifulSoup(contents,"html.parser")  

            for tag in soup.find_all('div', class_='info'):    
               # print tag  
                m_name = tag.find('span', class_='title').get_text()        
                m_rating_score = float(tag.find('span',class_='rating_num').get_text())          
                m_people = tag.find('div',class_="star")  
                m_span = m_people.findAll('span')  
                m_peoplecount = re.sub(r'[^0-9]','',m_span[3].contents[0])
                # 剔除了`人评价`字样, 只保留人数数字
                m_url=tag.find('a').get('href')  
                f.write('%s\t%s\t%s\t%s\n'% (m_name,str(m_rating_score), m_peoplecount ,m_url) )
            n=n+1
    print('请查看文件douban-top-%s!' %str(N))

num = input("你想要看豆瓣电影TOP榜单的前几名(小于等于250且最好是25的倍数):")
num = int(num)
doubantop(num)

# print 查看版本
#coding:utf-8  
''''' 
@author: jsjxy 
@origin: https://www.cnblogs.com/xisheng/p/9130156.html
'''  
from urllib import request 
from bs4 import BeautifulSoup  
import re
#from distutils.filelist import findall   

all_list = []
for n in range(10):
    url = 'https://movie.douban.com/top250?start='+str(25*n)+'&filter='  
    page = request.urlopen(url)   
    contents = page.read()   
 #print(contents)  
    soup = BeautifulSoup(contents,"html.parser")  
    for tag in soup.find_all('div', class_='info'):    
       # print tag  
        m_name = tag.find('span', class_='title').get_text()        
        m_rating_score = float(tag.find('span',class_='rating_num').get_text())          
        m_people = tag.find('div',class_="star")  
        m_span = m_people.findAll('span')  
        m_peoplecount = re.sub(r'[^0-9]','',m_span[3].contents[0])
        # 剔除了`人评价`字样, 只保留人数数字
        m_url=tag.find('a').get('href')  
        all_list.append('%s\t%s\t%s\t%s\n'% (m_name,str(m_rating_score), m_peoplecount ,m_url)) 



def doubantop(N,n=1):
    print("豆瓣电影TOP "+str(n)+' - '+str(N)+'\n'+'%-13s%-5s%-15s%-40s\n'%('影片名','评分','评价人数','链接'))
    for movie in all_list[n-1:N]:
        print(movie)
        


#num = input("你想要看豆瓣电影TOP250榜单的范围")
#num = int(num)
doubantop(30)

